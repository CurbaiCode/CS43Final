{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww19200\viewh18160\viewkind1
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\qr\partightenfactor0

\fs52 \cf0 Requirements and Design\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\qr\partightenfactor0

\b\fs42 \cf0 Dylan & Erick\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\b0\fs24 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\b\fs28 \cf0 Requirements\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\b0\fs24 \cf0 \
Rules:\
\
The game is played on a board consisting of a 3 by 3 grid with 9 squares as possible moves. Players are only allowed to place their symbol in an unmarked square, whether it has their own symbol or their opponent's. The first of two players, human vs. human or human vs. machine, to get 3 of their symbols (X or O) in a row (down, across, or diagonally) is the winner and the game is over. If there is no winner when all 9 squares are full, it is a draw and the game is over.\
\
Gameplay:\
\
The player first chooses if they wish to play against a friend or the computer. Players then choose between X and O to use as their move marker. After deciding which player is to go first, the starting player is allowed to mark any square, since they are all blank. The game continues with the players taking turns marking squares one symbol at a time. If there is no winner, then is a draw. When all 9 squares are full, the game is over. If neither player has placed 3 marks in a row, the game ends in a draw. The player that causes the draw or win goes second in the next round.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\b\fs28 \cf0 Design\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ri-1434\pardirnatural\partightenfactor0

\b0\fs24 \cf0 \
Classes:\
\
Game \'96 Prepare and handle game events, display menus, create and get players' names and symbols and moves, keep players' score, and switch turns. Board \'96 Start completely blank, display the current state of board, determine if move is legal, update the board with newest move, check for winning move, check if board is full and results in a draw, and reset for new round. Player \'96 Get player's names and symbols, and start score at 0. Computer \'96 Start score at 0, simulate possibilities of moves and determine the best move.\
\
Objects:\
\
Game \'96\'a0Created from Game class, created for each new game, and handles most dynamic functions. Board \'96 Created from Board class, used to display and update board when needed. Player 1 \'96\'a0Created from Player class, and used to track progress of player in each game. Player 2 \'96\'a0Created from Player class when game in multiplayer mode, and is identical to Player 1. Computer \'96\'a0Created from Computer class when game in single player mode, and copies board to algorithmically simulates all possibilities.\
\
Functions:\
\
Ask for input for various tasks; validate moves, symbols, and selections; generate instructions; construct menus; display the scoreboard; determine the status of the game (win or draw); and reset the game.\
\
Algorithms:\
\
Allow the computer to determine the best move to make by copying the current board and choosing to first win the game, blocking the opponent, taking the corners, taking the middle, and lastly taking the sides. Detect if a square is free, detect if move is valid, detect if either player has won (three marks down, across, or diagonal in a row), detect a tie, and keep score.\
}